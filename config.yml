secrets: secrets.yml

templates:
  global:
    content_filter:
      reject:
        - '*.rar'

    # Ensure Mac friendly filenames/paths
    pathscrub: mac

    # Add the output plugin for Transmission
    transmission:
      netrc: '{{ secrets.general.netrc_path }}'
      main_file_only: yes

    # Use a proxy
    proxy:
      http: '{{ secrets.general.proxy }}'
      https: '{{ secrets.general.proxy }}'
      ftp: '{{ secrets.general.proxy }}'

    # Ignore self-signed certificates
    verify_ssl_certificates: no

    # Play nicely with some of the source domains
    domain_delay:
      torrentz.eu: 1 seconds
    retry_failed:
      retry_time: 10 seconds
      retry_time_multiplier: 1
      max_retries: 4

    # Make it look more like a real browser
    headers:
      User-Agent: "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/45.0.2454.85 Safari/537.36"

  # TV shows
  tv:
    exists_series:
      path: '{{ secrets.general.tv_path }}'

    thetvdb_lookup: yes
    set:
      path: '{{ secrets.general.tv_path }}/{{ tvdb_series_name }}/Season {{ series_season }}'

    quality: hdtv+ !h265

  # Movies
  movies:
    exists_movie:
      path: '{{ secrets.general.movies_path }}'
      type: files
      lookup: imdb

    seen_movies: strict

    set:                                                                                                               
      path: '{{ secrets.general.movies_path }}'

    quality: 720p+ hdtv+ !h265

    # Don't download movies already rated 
    crossmatch:
      from:
        - imdb_list:
            list: ratings
            user_id: '{{ secrets.imdb.user_id }}'
      fields:
        - imdb_id
      action: reject

    # Attempt to prevent bogus downloads
    imdb_required: yes

    # Filter to accept entries
    movie_queue: accept

# Tasks
tasks:
  # Fetch titles from an IMDB watchlist and add to the movie queue
  Movie watchlist:
    imdb_list:
      list: watchlist
      user_id: '{{ secrets.imdb.user_id }}'
    movie_queue: add

    # Do not apply the global template
    template: no_global

  Movies:
    discover:
      what:
        - emit_movie_queue: yes
      from:
        - kat:
            category: movies
            verified: yes
        - torrentz: verified

    template:
      - movies

  TV:
    configure_series:
      from:
        trakt_list:
          username: '{{ secrets.trakt.username }}'
          list: '{{ secrets.trakt.tv_list }}'
          type: shows
      settings:
        exact: yes
        identified_by: ep
        upgrade: no

    discover:
      what:
        - emit_series:
            from_start: yes
      from:
        - kat:
            category: tv
            verified: yes
        - torrentz: verified

    template:
      - tv

  Stop seeding:
    clean_transmission:
      netrc: '{{ secrets.general.netrc_path }}'
      min_ratio: 1
    disable: [details]
    template: no_global
